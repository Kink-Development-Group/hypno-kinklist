name: Build and Deploy to FTP

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run

      - name: Build project
        run: npm run build

      - name: Set deployment target
        id: target
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "dir=${{ secrets.SFTP_REMOTE_DIR_PROD }}" >> $GITHUB_OUTPUT
            echo "env=production" >> $GITHUB_OUTPUT
          else
            echo "dir=${{ secrets.SFTP_REMOTE_DIR_DEV }}" >> $GITHUB_OUTPUT
            echo "env=development" >> $GITHUB_OUTPUT
          fi

      - name: Clear deploy folder and upload
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ secrets.SFTP_PORT }}
          script: |
            # Create target directory if it doesn't exist
            mkdir -p ${{ steps.target.outputs.dir }}
            
            # Clear existing files
            rm -rf ${{ steps.target.outputs.dir }}/*
            
            echo "âœ… Deploy folder cleared"

      - name: Upload build files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SFTP_HOST }}
          port: ${{ secrets.SFTP_PORT }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          source: "dist/*"
          target: ${{ steps.target.outputs.dir }}
          strip_components: 1
          overwrite: true

      - name: Set correct permissions
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ secrets.SFTP_PORT }}
          script: |
            # Set file permissions
            find ${{ steps.target.outputs.dir }} -type f -exec chmod 644 {} \;
            find ${{ steps.target.outputs.dir }} -type d -exec chmod 755 {} \;
            
            echo "ðŸš€ Deployment to ${{ steps.target.outputs.env }} completed successfully!"
