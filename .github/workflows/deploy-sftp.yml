name: Build and Deploy

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run

      - name: Build project
        run: npm run build

      - name: Validate build artifacts
        run: |
          echo "üîç Validating build artifacts..."
          if [ ! -d "./build" ]; then
            echo "‚ùå Build directory not found!"
            exit 1
          fi
          if [ ! -f "./build/index.html" ]; then
            echo "‚ùå index.html not found in build directory!"
            exit 1
          fi
          echo "‚úÖ Build artifacts validated successfully"
          echo "üìã Build contents:"
          ls -la ./build/

      - name: Set deployment target based on branch
        id: deployment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "target_dir=${{ secrets.SFTP_REMOTE_DIR_PROD }}" >> $GITHUB_OUTPUT
            echo "environment=production" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "target_dir=${{ secrets.SFTP_REMOTE_DIR_DEV }}" >> $GITHUB_OUTPUT
            echo "environment=development" >> $GITHUB_OUTPUT
          fi

      - name: Create target directory via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ secrets.SFTP_PORT }}
          script: |
            mkdir -p ${{ steps.deployment.outputs.target_dir }}
            chmod 755 ${{ steps.deployment.outputs.target_dir }}

      - name: Deploy to SFTP (${{ steps.deployment.outputs.environment }})
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SFTP_HOST }}
          port: ${{ secrets.SFTP_PORT }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          source: "./build/*"
          target: ${{ steps.deployment.outputs.target_dir }}
          strip_components: 1
          overwrite: true
          rm: true

      - name: Cleanup and set permissions
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ secrets.SFTP_PORT }}
          script: |
            find ${{ steps.deployment.outputs.target_dir }} -type f -name "*.html" -exec chmod 644 {} \;
            find ${{ steps.deployment.outputs.target_dir }} -type f -name "*.js" -exec chmod 644 {} \;
            find ${{ steps.deployment.outputs.target_dir }} -type f -name "*.css" -exec chmod 644 {} \;
            find ${{ steps.deployment.outputs.target_dir }} -type d -exec chmod 755 {} \;

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ secrets.SFTP_PORT }}
          script: |
            echo "üîç Verifying deployment in: ${{ steps.deployment.outputs.target_dir }}"
            ls -la "${{ steps.deployment.outputs.target_dir }}"
            if [ -f "${{ steps.deployment.outputs.target_dir }}/index.html" ]; then
              echo "‚úÖ Deployment successful - index.html found"
            else
              echo "‚ùå Deployment failed - index.html not found"
              exit 1
            fi
