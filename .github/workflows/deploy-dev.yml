name: Build and Deploy Development

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy-dev:
    runs-on: ubuntu-latest
    environment: Dev

    steps:
      - name: Debug Environment Variables
        env:
          FTP_USER_DEV: ${{ secrets.FTP_USER_DEV }}
          FTP_PASS_DEV: ${{ secrets.FTP_PASS_DEV }}
          FTP_HOST: ${{ secrets.FTP_HOST }}
        run: |
          echo "FTP_USER_DEV is set: $([ -n "$FTP_USER_DEV" ] && echo "yes" || echo "no")"
          echo "FTP_PASS_DEV is set: $([ -n "$FTP_PASS_DEV" ] && echo "yes" || echo "no")"
          echo "FTP_HOST is set: $([ -n "$FTP_HOST" ] && echo "yes" || echo "no")"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run

      - name: Build project
        run: npm run build

      - name: Install lftp
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y lftp

      - name: Deploy via FTPS (Development)
        env:
          FTP_USER_DEV: ${{ secrets.FTP_USER_DEV }}
          FTP_PASS_DEV: ${{ secrets.FTP_PASS_DEV }}
          FTP_HOST: ${{ secrets.FTP_HOST }}
        run: |
          echo "🔄 Attempting FTPS deployment to development with lftp..."

          # Verify secrets are available
          if [ -z "$FTP_USER_DEV" ] || [ -z "$FTP_PASS_DEV" ] || [ -z "$FTP_HOST" ]; then
            echo "❌ Missing required secrets!"
            exit 1
          fi

          # Create lftp script with proper escaping
          cat > deploy_ftps.lftp << 'EOF'
          set ftp:ssl-force true
          set ftp:ssl-protect-data true
          set ftp:ssl-protect-list true
          set ssl:verify-certificate no
          set ftp:passive-mode yes
          set net:timeout 60
          set net:max-retries 3
          set cmd:fail-exit yes
          set debug 5
          EOF

          # Add connection command with environment variables
          echo "open -u \"$FTP_USER_DEV\",\"$FTP_PASS_DEV\" ftps://$FTP_HOST:21" >> deploy_ftps.lftp

          cat >> deploy_ftps.lftp << 'EOF'
          rm -rf *
          mirror -R --delete --verbose ./dist/ .
          bye
          EOF

          # Execute lftp
          lftp -f deploy_ftps.lftp

      - name: Deployment result
        run: |
          echo "🚀 Deployment erfolgreich via FTPS (Development)!"
          echo "📁 Deployed to: kinklist_hypno_dev"
          echo "🌍 Environment: development"
