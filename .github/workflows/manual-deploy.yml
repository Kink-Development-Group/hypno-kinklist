name: Build and Deploy (Fallback)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'dev'

jobs:
  manual-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run

      - name: Build project
        run: npm run build

      - name: Set deployment target
        id: deployment
        run: |
          if [[ "${{ inputs.environment }}" == "prod" ]]; then
            echo "target_dir=${{ secrets.SFTP_REMOTE_DIR_PROD }}" >> $GITHUB_OUTPUT
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            echo "target_dir=${{ secrets.SFTP_REMOTE_DIR_DEV }}" >> $GITHUB_OUTPUT
            echo "environment=development" >> $GITHUB_OUTPUT
          fi

      - name: Test SSH connection
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ secrets.SFTP_PORT }}
          script: |
            echo "SSH connection successful"
            whoami
            pwd
            ls -la

      - name: Create and test target directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ secrets.SFTP_PORT }}
          script: |
            echo "Creating target directory: ${{ steps.deployment.outputs.target_dir }}"
            mkdir -p "${{ steps.deployment.outputs.target_dir }}"
            chmod 755 "${{ steps.deployment.outputs.target_dir }}"
            ls -la "${{ steps.deployment.outputs.target_dir }}"

      - name: Deploy via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SFTP_HOST }}
          port: ${{ secrets.SFTP_PORT }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          source: "./build/*"
          target: "${{ steps.deployment.outputs.target_dir }}"
          strip_components: 1
          overwrite: true

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: ${{ secrets.SFTP_PORT }}
          script: |
            echo "Verifying deployment in: ${{ steps.deployment.outputs.target_dir }}"
            ls -la "${{ steps.deployment.outputs.target_dir }}"
            if [ -f "${{ steps.deployment.outputs.target_dir }}/index.html" ]; then
              echo "✅ Deployment successful - index.html found"
            else
              echo "❌ Deployment failed - index.html not found"
              exit 1
            fi
